import {
  RouterLink,
  useRouter
} from "./chunk-ROEDTEUN.js";
import "./chunk-PBJIO4MK.js";
import {
  Fragment,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createTextVNode,
  createVNode,
  defineComponent,
  getCurrentInstance,
  inject,
  isReactive,
  isReadonly,
  isRef,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeStyle,
  onBeforeMount,
  onBeforeUnmount,
  onMounted,
  openBlock,
  provide,
  reactive,
  ref,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDynamicComponent,
  toDisplayString,
  unref,
  watch,
  watchEffect,
  withCtx,
  withModifiers
} from "./chunk-PD2AWGJV.js";
import "./chunk-6TJCVOLN.js";

// node_modules/pdap-design-system/dist/index.js
var lt = defineComponent({
  __name: "PdapButton",
  props: {
    intent: { default: "primary" },
    isLoading: { type: Boolean, default: false }
  },
  setup(e) {
    const t = e, r = reactive({
      "pdap-button": true,
      [`pdap-button-${t.intent}`]: !!t.intent,
      "pdap-button-loading": t.isLoading
    });
    return (n, a) => (openBlock(), createElementBlock("button", {
      class: normalizeClass(r)
    }, [
      renderSlot(n.$slots, "default")
    ], 2));
  }
});
var me = defineComponent({
  __name: "FlexContainer",
  props: {
    alignment: { default: "start" },
    component: { default: "div" }
  },
  setup(e) {
    const r = reactive({
      "pdap-flex-container": true,
      [`pdap-flex-container-${e.alignment}`]: true
    });
    return (n, a) => (openBlock(), createBlock(resolveDynamicComponent(n.component), {
      class: normalizeClass(r)
    }, {
      default: withCtx(() => [
        renderSlot(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
});
var ut = { class: "pdap-footer" };
var ct = { class: "pdap-footer-social-links" };
var dt = ["href"];
var pt = { class: "pdap-footer-copyright" };
var mt = createBaseVNode("br", null, null, -1);
var ft = createBaseVNode("p", { class: "pdap-footer-copyright" }, [
  createTextVNode(" PDAP is a non-profit. EIN: 85-4207132. "),
  createBaseVNode("a", {
    href: "https://docs.pdap.io/meta/policy/pdap-privacy-policy",
    alt: "Privacy Policy",
    target: "_blank"
  }, [
    createBaseVNode("br"),
    createTextVNode(" Privacy Policy "),
    createBaseVNode("i", { class: "fa fa-external-link" })
  ]),
  createBaseVNode("br"),
  createBaseVNode("a", { href: "mailto:contact@pdap.io" }, "contact@pdap.io")
], -1);
var gt = { class: "pdap-footer-widget-links" };
var ht = createBaseVNode("a", {
  href: "https://www.guidestar.org/profile/85-4207132",
  target: "_blank"
}, [
  createBaseVNode("img", { src: "https://widgets.guidestar.org/gximage2?o=9973356&l=v4" })
], -1);
var $t = ["href"];
var vt = ["src"];
var yt = ["src"];
var dn = defineComponent({
  __name: "PdapFooter",
  props: {
    logoImageSrc: { default: "node_modules/pdap-design-system/dist/images/acronym.svg" },
    logoImageAnchorPath: { default: "/" }
  },
  setup(e) {
    const t = e, r = inject("footerLinks", [
      {
        href: "https://github.com/orgs/Police-Data-Accessibility-Project",
        text: "Github"
      },
      {
        href: "https://discord.gg/wMqex8nKZJ",
        text: "Discord"
      },
      {
        href: "https://www.linkedin.com/company/pdap",
        text: "LinkedIn"
      },
      {
        path: "/jobs",
        text: "Jobs"
      }
    ]), n = t.logoImageAnchorPath.startsWith("/");
    return (a, s) => {
      const u = resolveComponent("router-link");
      return openBlock(), createElementBlock("footer", ut, [
        createVNode(me, { alignment: "center" }, {
          default: withCtx(() => [
            createBaseVNode("ul", ct, [
              (openBlock(true), createElementBlock(Fragment, null, renderList(unref(r), (l) => (openBlock(), createElementBlock("li", {
                key: l.text,
                class: "pdap-footer-link-container"
              }, [
                l.href ? (openBlock(), createElementBlock("a", {
                  key: 0,
                  class: "pdap-footer-social-link",
                  href: l.href,
                  target: "_blank",
                  referrerpolicy: "no-referrer"
                }, toDisplayString(l.text), 9, dt)) : createCommentVNode("", true),
                l.path ? (openBlock(), createBlock(u, {
                  key: 1,
                  "active-class": "pdap-footer-social-link-current",
                  "exact-active-class": "pdap-footer-social-link-current-exact",
                  class: "pdap-footer-social-link",
                  to: l.path
                }, {
                  default: withCtx(() => [
                    createTextVNode(toDisplayString(l.text), 1)
                  ]),
                  _: 2
                }, 1032, ["to"])) : createCommentVNode("", true)
              ]))), 128))
            ]),
            createBaseVNode("p", pt, [
              createTextVNode(" Â© " + toDisplayString((/* @__PURE__ */ new Date()).getFullYear()) + " Police Data Accessibility Project", 1),
              mt
            ]),
            ft,
            createBaseVNode("div", gt, [
              ht,
              unref(n) ? (openBlock(), createBlock(u, {
                key: 1,
                to: a.logoImageAnchorPath,
                class: "pdap-footer-logo"
              }, {
                default: withCtx(() => [
                  createBaseVNode("img", {
                    src: a.logoImageSrc,
                    loading: "lazy",
                    width: "250",
                    alt: "Police Data Accessibility Project Logo"
                  }, null, 8, yt)
                ]),
                _: 1
              }, 8, ["to"])) : (openBlock(), createElementBlock("a", {
                key: 0,
                href: a.logoImageAnchorPath,
                class: "pdap-footer-logo"
              }, [
                createBaseVNode("img", {
                  src: a.logoImageSrc,
                  loading: "lazy",
                  width: "250",
                  alt: "Police Data Accessibility Project Logo"
                }, null, 8, vt)
              ], 8, $t))
            ])
          ]),
          _: 1
        })
      ]);
    };
  }
});
function Oe(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function k(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Oe(Object(r), true).forEach(function(n) {
      _t(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Oe(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function _t(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r, e;
}
function Ce(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  return Object.keys(e).reduce((r, n) => (t.includes(n) || (r[n] = unref(e[n])), r), {});
}
function se(e) {
  return typeof e == "function";
}
function bt(e) {
  return isReactive(e) || isReadonly(e);
}
function qe(e, t, r) {
  let n = e;
  const a = t.split(".");
  for (let s = 0; s < a.length; s++) {
    if (!n[a[s]])
      return r;
    n = n[a[s]];
  }
  return n;
}
function de(e, t, r) {
  return computed(() => e.some((n) => qe(t, n, {
    [r]: false
  })[r]));
}
function Ee(e, t, r) {
  return computed(() => e.reduce((n, a) => {
    const s = qe(t, a, {
      [r]: false
    })[r] || [];
    return n.concat(s);
  }, []));
}
function Ne(e, t, r, n) {
  return e.call(n, unref(t), unref(r), n);
}
function Be(e) {
  return e.$valid !== void 0 ? !e.$valid : !e;
}
function wt(e, t, r, n, a, s, u) {
  let {
    $lazy: l,
    $rewardEarly: o
  } = a, c = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : [], m = arguments.length > 8 ? arguments[8] : void 0, $ = arguments.length > 9 ? arguments[9] : void 0, h = arguments.length > 10 ? arguments[10] : void 0;
  const f = ref(!!n.value), i = ref(0);
  r.value = false;
  const p = watch([t, n].concat(c, h), () => {
    if (l && !n.value || o && !$.value && !r.value)
      return;
    let g;
    try {
      g = Ne(e, t, m, u);
    } catch (v) {
      g = Promise.reject(v);
    }
    i.value++, r.value = !!i.value, f.value = false, Promise.resolve(g).then((v) => {
      i.value--, r.value = !!i.value, s.value = v, f.value = Be(v);
    }).catch((v) => {
      i.value--, r.value = !!i.value, s.value = v, f.value = true;
    });
  }, {
    immediate: true,
    deep: typeof t == "object"
  });
  return {
    $invalid: f,
    $unwatch: p
  };
}
function xt(e, t, r, n, a, s, u, l) {
  let {
    $lazy: o,
    $rewardEarly: c
  } = n;
  const m = () => ({}), $ = computed(() => {
    if (o && !r.value || c && !l.value)
      return false;
    let h = true;
    try {
      const f = Ne(e, t, u, s);
      a.value = f, h = Be(f);
    } catch (f) {
      a.value = f;
    }
    return h;
  });
  return {
    $unwatch: m,
    $invalid: $
  };
}
function Pt(e, t, r, n, a, s, u, l, o, c, m) {
  const $ = ref(false), h = e.$params || {}, f = ref(null);
  let i, p;
  e.$async ? {
    $invalid: i,
    $unwatch: p
  } = wt(e.$validator, t, $, r, n, f, a, e.$watchTargets, o, c, m) : {
    $invalid: i,
    $unwatch: p
  } = xt(e.$validator, t, r, n, f, a, o, c);
  const g = e.$message;
  return {
    $message: se(g) ? computed(() => g(Ce({
      $pending: $,
      $invalid: i,
      $params: Ce(h),
      $model: t,
      $response: f,
      $validator: s,
      $propertyPath: l,
      $property: u
    }))) : g || "",
    $params: h,
    $pending: $,
    $invalid: i,
    $response: f,
    $unwatch: p
  };
}
function Rt() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const t = unref(e), r = Object.keys(t), n = {}, a = {}, s = {};
  let u = null;
  return r.forEach((l) => {
    const o = t[l];
    switch (true) {
      case se(o.$validator):
        n[l] = o;
        break;
      case se(o):
        n[l] = {
          $validator: o
        };
        break;
      case l === "$validationGroups":
        u = o;
        break;
      case l.startsWith("$"):
        s[l] = o;
        break;
      default:
        a[l] = o;
    }
  }), {
    rules: n,
    nestedValidators: a,
    config: s,
    validationGroups: u
  };
}
var Ot = "__root";
function Ct(e, t, r, n, a, s, u, l, o) {
  const c = Object.keys(e), m = n.get(a, e), $ = ref(false), h = ref(false), f = ref(0);
  if (m) {
    if (!m.$partial)
      return m;
    m.$unwatch(), $.value = m.$dirty.value;
  }
  const i = {
    $dirty: $,
    $path: a,
    $touch: () => {
      $.value || ($.value = true);
    },
    $reset: () => {
      $.value && ($.value = false);
    },
    $commit: () => {
    }
  };
  return c.length ? (c.forEach((p) => {
    i[p] = Pt(e[p], t, i.$dirty, s, u, p, r, a, o, h, f);
  }), i.$externalResults = computed(() => l.value ? [].concat(l.value).map((p, g) => ({
    $propertyPath: a,
    $property: r,
    $validator: "$externalResults",
    $uid: `${a}-externalResult-${g}`,
    $message: p,
    $params: {},
    $response: null,
    $pending: false
  })) : []), i.$invalid = computed(() => {
    const p = c.some((g) => unref(i[g].$invalid));
    return h.value = p, !!i.$externalResults.value.length || p;
  }), i.$pending = computed(() => c.some((p) => unref(i[p].$pending))), i.$error = computed(() => i.$dirty.value ? i.$pending.value || i.$invalid.value : false), i.$silentErrors = computed(() => c.filter((p) => unref(i[p].$invalid)).map((p) => {
    const g = i[p];
    return reactive({
      $propertyPath: a,
      $property: r,
      $validator: p,
      $uid: `${a}-${p}`,
      $message: g.$message,
      $params: g.$params,
      $response: g.$response,
      $pending: g.$pending
    });
  }).concat(i.$externalResults.value)), i.$errors = computed(() => i.$dirty.value ? i.$silentErrors.value : []), i.$unwatch = () => c.forEach((p) => {
    i[p].$unwatch();
  }), i.$commit = () => {
    h.value = true, f.value = Date.now();
  }, n.set(a, e, i), i) : (m && n.set(a, e, i), i);
}
function Et(e, t, r, n, a, s, u) {
  const l = Object.keys(e);
  return l.length ? l.reduce((o, c) => (o[c] = fe({
    validations: e[c],
    state: t,
    key: c,
    parentKey: r,
    resultsCache: n,
    globalConfig: a,
    instance: s,
    externalResults: u
  }), o), {}) : {};
}
function jt(e, t, r) {
  const n = computed(() => [t, r].filter((i) => i).reduce((i, p) => i.concat(Object.values(unref(p))), [])), a = computed({
    get() {
      return e.$dirty.value || (n.value.length ? n.value.every((i) => i.$dirty) : false);
    },
    set(i) {
      e.$dirty.value = i;
    }
  }), s = computed(() => {
    const i = unref(e.$silentErrors) || [], p = n.value.filter((g) => (unref(g).$silentErrors || []).length).reduce((g, v) => g.concat(...v.$silentErrors), []);
    return i.concat(p);
  }), u = computed(() => {
    const i = unref(e.$errors) || [], p = n.value.filter((g) => (unref(g).$errors || []).length).reduce((g, v) => g.concat(...v.$errors), []);
    return i.concat(p);
  }), l = computed(() => n.value.some((i) => i.$invalid) || unref(e.$invalid) || false), o = computed(() => n.value.some((i) => unref(i.$pending)) || unref(e.$pending) || false), c = computed(() => n.value.some((i) => i.$dirty) || n.value.some((i) => i.$anyDirty) || a.value), m = computed(() => a.value ? o.value || l.value : false), $ = () => {
    e.$touch(), n.value.forEach((i) => {
      i.$touch();
    });
  }, h = () => {
    e.$commit(), n.value.forEach((i) => {
      i.$commit();
    });
  }, f = () => {
    e.$reset(), n.value.forEach((i) => {
      i.$reset();
    });
  };
  return n.value.length && n.value.every((i) => i.$dirty) && $(), {
    $dirty: a,
    $errors: u,
    $invalid: l,
    $anyDirty: c,
    $error: m,
    $pending: o,
    $touch: $,
    $reset: f,
    $silentErrors: s,
    $commit: h
  };
}
function fe(e) {
  let {
    validations: t,
    state: r,
    key: n,
    parentKey: a,
    childResults: s,
    resultsCache: u,
    globalConfig: l = {},
    instance: o,
    externalResults: c
  } = e;
  const m = a ? `${a}.${n}` : n, {
    rules: $,
    nestedValidators: h,
    config: f,
    validationGroups: i
  } = Rt(t), p = k(k({}, l), f), g = n ? computed(() => {
    const w = unref(r);
    return w ? unref(w[n]) : void 0;
  }) : r, v = k({}, unref(c) || {}), A = computed(() => {
    const w = unref(c);
    return n ? w ? unref(w[n]) : void 0 : w;
  }), F = Ct($, g, n, u, m, p, o, A, r), C = Et(h, g, m, u, p, o, A), q = {};
  i && Object.entries(i).forEach((w) => {
    let [N, L] = w;
    q[N] = {
      $invalid: de(L, C, "$invalid"),
      $error: de(L, C, "$error"),
      $pending: de(L, C, "$pending"),
      $errors: Ee(L, C, "$errors"),
      $silentErrors: Ee(L, C, "$silentErrors")
    };
  });
  const {
    $dirty: T,
    $errors: ee,
    $invalid: le,
    $anyDirty: Ue,
    $error: Xe,
    $pending: ue,
    $touch: ce,
    $reset: Ke,
    $silentErrors: Ze,
    $commit: xe
  } = jt(F, C, s), Qe = n ? computed({
    get: () => unref(g),
    set: (w) => {
      T.value = true;
      const N = unref(r), L = unref(c);
      L && (L[n] = v[n]), isRef(N[n]) ? N[n].value = w : N[n] = w;
    }
  }) : null;
  n && p.$autoDirty && watch(g, () => {
    T.value || ce();
    const w = unref(c);
    w && (w[n] = v[n]);
  }, {
    flush: "sync"
  });
  async function Je() {
    return ce(), p.$rewardEarly && (xe(), await nextTick()), await nextTick(), new Promise((w) => {
      if (!ue.value)
        return w(!le.value);
      const N = watch(ue, () => {
        w(!le.value), N();
      });
    });
  }
  function Ye(w) {
    return (s.value || {})[w];
  }
  function et() {
    isRef(c) ? c.value = v : Object.keys(v).length === 0 ? Object.keys(c).forEach((w) => {
      delete c[w];
    }) : Object.assign(c, v);
  }
  return reactive(k(k(k({}, F), {}, {
    $model: Qe,
    $dirty: T,
    $error: Xe,
    $errors: ee,
    $invalid: le,
    $anyDirty: Ue,
    $pending: ue,
    $touch: ce,
    $reset: Ke,
    $path: m || Ot,
    $silentErrors: Ze,
    $validate: Je,
    $commit: xe
  }, s && {
    $getResultsForChild: Ye,
    $clearExternalResults: et,
    $validationGroups: q
  }), C));
}
var At = class {
  constructor() {
    this.storage = /* @__PURE__ */ new Map();
  }
  set(t, r, n) {
    this.storage.set(t, {
      rules: r,
      result: n
    });
  }
  checkRulesValidity(t, r, n) {
    const a = Object.keys(n), s = Object.keys(r);
    return s.length !== a.length || !s.every((l) => a.includes(l)) ? false : s.every((l) => r[l].$params ? Object.keys(r[l].$params).every((o) => unref(n[l].$params[o]) === unref(r[l].$params[o])) : true);
  }
  get(t, r) {
    const n = this.storage.get(t);
    if (!n)
      return;
    const {
      rules: a,
      result: s
    } = n, u = this.checkRulesValidity(t, r, a), l = s.$unwatch ? s.$unwatch : () => ({});
    return u ? s : {
      $dirty: s.$dirty,
      $partial: true,
      $unwatch: l
    };
  }
};
var re = {
  COLLECT_ALL: true,
  COLLECT_NONE: false
};
var je = Symbol("vuelidate#injectChildResults");
var Ae = Symbol("vuelidate#removeChildResults");
function St(e) {
  let {
    $scope: t,
    instance: r
  } = e;
  const n = {}, a = ref([]), s = computed(() => a.value.reduce((m, $) => (m[$] = unref(n[$]), m), {}));
  function u(m, $) {
    let {
      $registerAs: h,
      $scope: f,
      $stopPropagation: i
    } = $;
    i || t === re.COLLECT_NONE || f === re.COLLECT_NONE || t !== re.COLLECT_ALL && t !== f || (n[h] = m, a.value.push(h));
  }
  r.__vuelidateInjectInstances = [].concat(r.__vuelidateInjectInstances || [], u);
  function l(m) {
    a.value = a.value.filter(($) => $ !== m), delete n[m];
  }
  r.__vuelidateRemoveInstances = [].concat(r.__vuelidateRemoveInstances || [], l);
  const o = inject(je, []);
  provide(je, r.__vuelidateInjectInstances);
  const c = inject(Ae, []);
  return provide(Ae, r.__vuelidateRemoveInstances), {
    childResults: s,
    sendValidationResultsToParent: o,
    removeValidationResultsFromParent: c
  };
}
function He(e) {
  return new Proxy(e, {
    get(t, r) {
      return typeof t[r] == "object" ? He(t[r]) : computed(() => t[r]);
    }
  });
}
var Se = 0;
function It(e, t) {
  var r;
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  arguments.length === 1 && (n = e, e = void 0, t = void 0);
  let {
    $registerAs: a,
    $scope: s = re.COLLECT_ALL,
    $stopPropagation: u,
    $externalResults: l,
    currentVueInstance: o
  } = n;
  const c = o || ((r = getCurrentInstance()) === null || r === void 0 ? void 0 : r.proxy), m = c ? c.$options : {};
  a || (Se += 1, a = `_vuelidate_${Se}`);
  const $ = ref({}), h = new At(), {
    childResults: f,
    sendValidationResultsToParent: i,
    removeValidationResultsFromParent: p
  } = c ? St({
    $scope: s,
    instance: c
  }) : {
    childResults: ref({})
  };
  if (!e && m.validations) {
    const g = m.validations;
    t = ref({}), onBeforeMount(() => {
      t.value = c, watch(() => se(g) ? g.call(t.value, new He(t.value)) : g, (v) => {
        $.value = fe({
          validations: v,
          state: t,
          childResults: f,
          resultsCache: h,
          globalConfig: n,
          instance: c,
          externalResults: l || c.vuelidateExternalResults
        });
      }, {
        immediate: true
      });
    }), n = m.validationsConfig || n;
  } else {
    const g = isRef(e) || bt(e) ? e : reactive(e || {});
    watch(g, (v) => {
      $.value = fe({
        validations: v,
        state: t,
        childResults: f,
        resultsCache: h,
        globalConfig: n,
        instance: c ?? {},
        externalResults: l
      });
    }, {
      immediate: true
    });
  }
  return c && (i.forEach((g) => g($, {
    $registerAs: a,
    $scope: s,
    $stopPropagation: u
  })), onBeforeUnmount(() => p.forEach((g) => g(a)))), computed(() => k(k({}, unref($.value)), f.value));
}
var S = ((e) => (e.CHECKBOX = "checkbox", e.TEXT = "text", e.PASSWORD = "password", e))(S || {});
var Tt = ["id", "name", "placeholder", "value"];
var Lt = ["id", "name", "placeholder", "value"];
var kt = ["id", "name", "checked", "value"];
var Vt = ["id"];
var zt = ["for"];
var Mt = defineComponent({
  __name: "PdapInput",
  props: {
    error: {},
    id: {},
    label: {},
    name: {},
    placeholder: {},
    type: {},
    value: {},
    defaultChecked: { type: Boolean }
  },
  emits: ["change", "input"],
  setup(e, { emit: t }) {
    const r = e, n = t, a = () => {
      u.value = !u.value, n("change", u.value.toString());
    }, s = (o) => {
      n("input", o.target.value);
    }, u = ref(r.defaultChecked), l = computed(() => `pdap-${r.name}-input-error`);
    return (o, c) => {
      var m;
      return openBlock(), createBlock(unref(Zr), {
        class: normalizeClass({
          "pdap-input": true,
          "pdap-input-error": Number((m = o.error) == null ? void 0 : m.length) >= 1
        })
      }, {
        default: withCtx(() => [
          o.type === unref(S).TEXT ? (openBlock(), createElementBlock("input", mergeProps({
            key: 0,
            id: o.id,
            type: "text",
            name: o.name,
            placeholder: o.placeholder,
            value: o.value
          }, o.$attrs, { onInput: s }), null, 16, Tt)) : createCommentVNode("", true),
          o.type === unref(S).PASSWORD ? (openBlock(), createElementBlock("input", mergeProps({
            key: 1,
            id: o.id,
            type: "password",
            name: o.name,
            placeholder: o.placeholder,
            value: o.value
          }, o.$attrs, { onInput: s }), null, 16, Lt)) : o.type === unref(S).CHECKBOX ? (openBlock(), createElementBlock("input", mergeProps({
            key: 2,
            id: o.id,
            class: "pdap-input-checkbox",
            name: o.name,
            checked: u.value,
            type: "checkbox",
            value: o.value
          }, o.$attrs, { onChange: a }), null, 16, kt)) : createCommentVNode("", true),
          o.error ? (openBlock(), createElementBlock("div", {
            key: 3,
            id: l.value,
            class: "pdap-input-error-message"
          }, toDisplayString(o.error), 9, Vt)) : createCommentVNode("", true),
          createBaseVNode("label", {
            class: "pdap-input-label",
            for: o.id
          }, toDisplayString(o.label), 9, zt)
        ]),
        _: 1
      }, 8, ["class"]);
    };
  }
});
function Ie(e, t) {
  var r = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    t && (n = n.filter(function(a) {
      return Object.getOwnPropertyDescriptor(e, a).enumerable;
    })), r.push.apply(r, n);
  }
  return r;
}
function W(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Ie(Object(r), true).forEach(function(n) {
      Dt(e, n, r[n]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Ie(Object(r)).forEach(function(n) {
      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
    });
  }
  return e;
}
function Dt(e, t, r) {
  return t in e ? Object.defineProperty(e, t, {
    value: r,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e[t] = r, e;
}
function Q(e) {
  return typeof e == "function";
}
function oe(e) {
  return e !== null && typeof e == "object" && !Array.isArray(e);
}
function ie(e) {
  return Q(e.$validator) ? W({}, e) : {
    $validator: e
  };
}
function Ft(e) {
  return oe(e) && Q(e.then);
}
function M(e) {
  return typeof e == "object" ? e.$valid : e;
}
function H(e) {
  return e.$validator || e;
}
function ye(e, t) {
  if (!oe(e))
    throw new Error(`[@vuelidate/validators]: First parameter to "withParams" should be an object, provided ${typeof e}`);
  if (!oe(t) && !Q(t))
    throw new Error("[@vuelidate/validators]: Validator must be a function or object with $validator parameter");
  const r = ie(t);
  return r.$params = W(W({}, r.$params || {}), e), r;
}
function J(e, t) {
  if (!Q(e) && typeof unref(e) != "string")
    throw new Error(`[@vuelidate/validators]: First parameter to "withMessage" should be string or a function returning a string, provided ${typeof e}`);
  if (!oe(t) && !Q(t))
    throw new Error("[@vuelidate/validators]: Validator must be a function or object with $validator parameter");
  const r = ie(t);
  return r.$message = e, r;
}
function qt(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  const r = ie(e);
  return W(W({}, r), {}, {
    $async: true,
    $watchTargets: t
  });
}
function Nt(e) {
  return {
    $validator(t) {
      for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), a = 1; a < r; a++)
        n[a - 1] = arguments[a];
      return unref(t).reduce((s, u, l) => {
        const o = Object.entries(u).reduce((c, m) => {
          let [$, h] = m;
          const f = e[$] || {}, i = Object.entries(f).reduce((p, g) => {
            let [v, A] = g;
            const C = H(A).call(this, h, u, l, ...n), q = M(C);
            if (p.$data[v] = C, p.$data.$invalid = !q || !!p.$data.$invalid, p.$data.$error = p.$data.$invalid, !q) {
              let T = A.$message || "";
              const ee = A.$params || {};
              typeof T == "function" && (T = T({
                $pending: false,
                $invalid: !q,
                $params: ee,
                $model: h,
                $response: C
              })), p.$errors.push({
                $property: $,
                $message: T,
                $params: ee,
                $response: C,
                $model: h,
                $pending: false,
                $validator: v
              });
            }
            return {
              $valid: p.$valid && q,
              $data: p.$data,
              $errors: p.$errors
            };
          }, {
            $valid: true,
            $data: {},
            $errors: []
          });
          return c.$data[$] = i.$data, c.$errors[$] = i.$errors, {
            $valid: c.$valid && i.$valid,
            $data: c.$data,
            $errors: c.$errors
          };
        }, {
          $valid: true,
          $data: {},
          $errors: {}
        });
        return {
          $valid: s.$valid && o.$valid,
          $data: s.$data.concat(o.$data),
          $errors: s.$errors.concat(o.$errors)
        };
      }, {
        $valid: true,
        $data: [],
        $errors: []
      });
    },
    $message: (t) => {
      let {
        $response: r
      } = t;
      return r ? r.$errors.map((n) => Object.values(n).map((a) => a.map((s) => s.$message)).reduce((a, s) => a.concat(s), [])) : [];
    }
  };
}
var O = (e) => {
  if (e = unref(e), Array.isArray(e))
    return !!e.length;
  if (e == null)
    return false;
  if (e === false)
    return true;
  if (e instanceof Date)
    return !isNaN(e.getTime());
  if (typeof e == "object") {
    for (let t in e)
      return true;
    return false;
  }
  return !!String(e).length;
};
var _e = (e) => (e = unref(e), Array.isArray(e) ? e.length : typeof e == "object" ? Object.keys(e).length : String(e).length);
function D() {
  for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
    t[r] = arguments[r];
  return (n) => (n = unref(n), !O(n) || t.every((a) => (a.lastIndex = 0, a.test(n))));
}
var X = Object.freeze({
  __proto__: null,
  forEach: Nt,
  len: _e,
  normalizeValidatorObject: ie,
  regex: D,
  req: O,
  unwrap: unref,
  unwrapNormalizedValidator: H,
  unwrapValidatorResponse: M,
  withAsync: qt,
  withMessage: J,
  withParams: ye
});
var Bt = D(/^[a-zA-Z]*$/);
var Ht = {
  $validator: Bt,
  $message: "The value is not alphabetical",
  $params: {
    type: "alpha"
  }
};
var Gt = D(/^[a-zA-Z0-9]*$/);
var Wt = {
  $validator: Gt,
  $message: "The value must be alpha-numeric",
  $params: {
    type: "alphaNum"
  }
};
var Ut = D(/^\d*(\.\d+)?$/);
var Xt = {
  $validator: Ut,
  $message: "Value must be numeric",
  $params: {
    type: "numeric"
  }
};
function Kt(e, t) {
  return (r) => !O(r) || (!/\s/.test(r) || r instanceof Date) && +unref(e) <= +r && +unref(t) >= +r;
}
function Zt(e, t) {
  return {
    $validator: Kt(e, t),
    $message: (r) => {
      let {
        $params: n
      } = r;
      return `The value must be between ${n.min} and ${n.max}`;
    },
    $params: {
      min: e,
      max: t,
      type: "between"
    }
  };
}
var Qt = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/i;
var Jt = D(Qt);
var be = {
  $validator: Jt,
  $message: "Value is not a valid email address",
  $params: {
    type: "email"
  }
};
function Yt(e) {
  if (!O(e))
    return true;
  if (typeof e != "string")
    return false;
  const t = e.split(".");
  return t.length === 4 && t.every(er);
}
var er = (e) => {
  if (e.length > 3 || e.length === 0 || e[0] === "0" && e !== "0" || !e.match(/^\d+$/))
    return false;
  const t = +e | 0;
  return t >= 0 && t <= 255;
};
var tr = {
  $validator: Yt,
  $message: "The value is not a valid IP address",
  $params: {
    type: "ipAddress"
  }
};
function rr() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ":";
  return (t) => {
    if (e = unref(e), !O(t))
      return true;
    if (typeof t != "string")
      return false;
    const r = typeof e == "string" && e !== "" ? t.split(e) : t.length === 12 || t.length === 16 ? t.match(/.{2}/g) : null;
    return r !== null && (r.length === 6 || r.length === 8) && r.every(nr);
  };
}
var nr = (e) => e.toLowerCase().match(/^[0-9a-f]{2}$/);
function ar(e) {
  return {
    $validator: rr(e),
    $message: "The value is not a valid MAC Address",
    $params: {
      type: "macAddress"
    }
  };
}
function sr(e) {
  return (t) => !O(t) || _e(t) <= unref(e);
}
function or(e) {
  return {
    $validator: sr(e),
    $message: (t) => {
      let {
        $params: r
      } = t;
      return `The maximum length allowed is ${r.max}`;
    },
    $params: {
      max: e,
      type: "maxLength"
    }
  };
}
function ir(e) {
  return (t) => !O(t) || _e(t) >= unref(e);
}
function lr(e) {
  return {
    $validator: ir(e),
    $message: (t) => {
      let {
        $params: r
      } = t;
      return `This field should be at least ${r.min} characters long`;
    },
    $params: {
      min: e,
      type: "minLength"
    }
  };
}
function ur(e) {
  return typeof e == "string" && (e = e.trim()), O(e);
}
var we = {
  $validator: ur,
  $message: "Value is required",
  $params: {
    type: "required"
  }
};
var Te = (e, t) => e ? O(typeof t == "string" ? t.trim() : t) : true;
function cr(e) {
  return function(t, r) {
    if (typeof e != "function")
      return Te(unref(e), t);
    const n = e.call(this, t, r);
    return Te(n, t);
  };
}
function dr(e) {
  return {
    $validator: cr(e),
    $message: "The value is required",
    $params: {
      type: "requiredIf",
      prop: e
    }
  };
}
var Le = (e, t) => e ? true : O(typeof t == "string" ? t.trim() : t);
function pr(e) {
  return function(t, r) {
    if (typeof e != "function")
      return Le(unref(e), t);
    const n = e.call(this, t, r);
    return Le(n, t);
  };
}
function mr(e) {
  return {
    $validator: pr(e),
    $message: "The value is required",
    $params: {
      type: "requiredUnless",
      prop: e
    }
  };
}
function fr(e) {
  return (t) => unref(t) === unref(e);
}
function gr(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "other";
  return {
    $validator: fr(e),
    $message: (r) => `The value must be equal to the ${t} value`,
    $params: {
      equalTo: e,
      otherName: t,
      type: "sameAs"
    }
  };
}
var hr = /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i;
var $r = D(hr);
var vr = {
  $validator: $r,
  $message: "The value is not a valid URL address",
  $params: {
    type: "url"
  }
};
function yr(e) {
  return function() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    return e.reduce((a, s) => M(a) ? a : H(s).apply(this, r), false);
  };
}
function _r(e) {
  return function() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    return e.reduce(async (a, s) => {
      const u = await a;
      return M(u) ? u : H(s).apply(this, r);
    }, Promise.resolve(false));
  };
}
function br() {
  for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
    t[r] = arguments[r];
  const n = t.some((u) => u.$async), a = t.reduce((u, l) => l.$watchTargets ? u.concat(l.$watchTargets) : u, []);
  let s = () => false;
  return t.length && (s = n ? _r(t) : yr(t)), {
    $async: n,
    $validator: s,
    $watchTargets: a
  };
}
function wr() {
  return ye({
    type: "or"
  }, J("The value does not match any of the provided validators", br(...arguments)));
}
function xr(e) {
  return function() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    return e.reduce((a, s) => M(a) ? H(s).apply(this, r) : a, true);
  };
}
function Pr(e) {
  return function() {
    for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++)
      r[n] = arguments[n];
    return e.reduce(async (a, s) => {
      const u = await a;
      return M(u) ? H(s).apply(this, r) : u;
    }, Promise.resolve(true));
  };
}
function Rr() {
  for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
    t[r] = arguments[r];
  const n = t.some((u) => u.$async), a = t.reduce((u, l) => l.$watchTargets ? u.concat(l.$watchTargets) : u, []);
  let s = () => false;
  return t.length && (s = n ? Pr(t) : xr(t)), {
    $async: n,
    $validator: s,
    $watchTargets: a
  };
}
function Or() {
  return ye({
    type: "and"
  }, J("The value does not match all of the provided validators", Rr(...arguments)));
}
function Cr(e) {
  return function(t, r) {
    if (!O(t))
      return true;
    const n = H(e).call(this, t, r);
    return Ft(n) ? n.then((a) => !M(a)) : !M(n);
  };
}
function Er(e) {
  return {
    $validator: Cr(e),
    $message: "The value does not match the provided validator",
    $params: {
      type: "not"
    }
  };
}
function jr(e) {
  return (t) => !O(t) || (!/\s/.test(t) || t instanceof Date) && +t >= +unref(e);
}
function Ar(e) {
  return {
    $validator: jr(e),
    $message: (t) => {
      let {
        $params: r
      } = t;
      return `The minimum value allowed is ${r.min}`;
    },
    $params: {
      min: e,
      type: "minValue"
    }
  };
}
function Sr(e) {
  return (t) => !O(t) || (!/\s/.test(t) || t instanceof Date) && +t <= +unref(e);
}
var Ir = (e) => ({
  $validator: Sr(e),
  $message: (t) => {
    let {
      $params: r
    } = t;
    return `The maximum value allowed is ${r.max}`;
  },
  $params: {
    max: e,
    type: "maxValue"
  }
});
var Tr = D(/(^[0-9]*$)|(^-[0-9]+$)/);
var Lr = {
  $validator: Tr,
  $message: "Value is not an integer",
  $params: {
    type: "integer"
  }
};
var kr = D(/^[-]?\d*(\.\d+)?$/);
var Vr = {
  $validator: kr,
  $message: "Value must be decimal",
  $params: {
    type: "decimal"
  }
};
function zr(e) {
  let {
    t,
    messagePath: r = (a) => {
      let {
        $validator: s
      } = a;
      return `validations.${s}`;
    },
    messageParams: n = (a) => a
  } = e;
  return function(s) {
    let {
      withArguments: u = false,
      messagePath: l = r,
      messageParams: o = n
    } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    function c(m) {
      return t(l(m), o(W({
        model: m.$model,
        property: m.$property,
        pending: m.$pending,
        invalid: m.$invalid,
        response: m.$response,
        validator: m.$validator,
        propertyPath: m.$propertyPath
      }, m.$params)));
    }
    return u && typeof s == "function" ? function() {
      return J(c, s(...arguments));
    } : J(c, s);
  };
}
var Ge = Object.freeze(Object.defineProperty({
  __proto__: null,
  alpha: Ht,
  alphaNum: Wt,
  and: Or,
  between: Zt,
  createI18nMessage: zr,
  decimal: Vr,
  email: be,
  helpers: X,
  integer: Lr,
  ipAddress: tr,
  macAddress: ar,
  maxLength: or,
  maxValue: Ir,
  minLength: lr,
  minValue: Ar,
  not: Er,
  numeric: Xt,
  or: wr,
  required: we,
  requiredIf: dr,
  requiredUnless: mr,
  sameAs: gr,
  url: vr
}, Symbol.toStringTag, { value: "Module" }));
var We = X.regex(
  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/
);
function ke(e) {
  return ["maxLength", "minLength"].includes(e);
}
function Ve(e) {
  return e === "required";
}
function ze(e) {
  return e === "email";
}
function Me(e) {
  return e === "password";
}
function Mr(e, t) {
  return {
    [e]: Ge[e](t)
  };
}
function Dr(e, t, r) {
  return {
    [e]: X.withMessage(r, Ge[e](t))
  };
}
function Fr() {
  return { required: we };
}
function qr(e) {
  return {
    required: X.withMessage(e, we)
  };
}
function Nr() {
  return { email: be };
}
function Br(e) {
  return {
    email: X.withMessage(e, be)
  };
}
function Hr() {
  return { password: We };
}
function Gr(e) {
  return {
    password: X.withMessage(e, We)
  };
}
function Wr(e, t) {
  if (ke(e) && typeof t.message == "string" && typeof t.value == "number")
    return Dr(
      e,
      t.value,
      t.message
    );
  if (ke(e) && typeof t.message > "u" && typeof t.value == "number")
    return Mr(e, t.value);
  if (ze(e) && typeof t.message == "string")
    return Br(t.message);
  if (ze(e) && typeof t.message > "u")
    return Nr();
  if (Me(e) && typeof t.message == "string")
    return Gr(t.message);
  if (Me(e) && typeof t.message > "u")
    return Hr();
  if (Ve(e) && typeof t.message == "string")
    return qr(t.message);
  if (Ve(e) && typeof t.message > "u")
    return Fr();
  throw new Error("No valid rule detected");
}
var Ur = ["id", "name"];
var Xr = {
  key: 0,
  class: "pdap-form-error-message"
};
var Kr = defineComponent({
  __name: "PdapForm",
  props: {
    error: { default: null },
    id: {},
    name: {},
    schema: {}
  },
  emits: ["submit", "change"],
  setup(e, { emit: t }) {
    const r = e, n = t, a = computed(
      () => r.schema.map((h) => {
        const f = { ...h };
        return delete f.validators, f;
      })
    );
    let s = reactive(
      a.value.reduce((h, f) => {
        switch (f.type) {
          case S.CHECKBOX:
            return { ...h, [f.name]: String(f.defaultChecked) };
          case S.TEXT:
          case S.PASSWORD:
          default:
            return { ...h, [f.name]: f.value };
        }
      }, {})
    );
    const u = r.schema.reduce((h, f) => {
      const i = Object.entries(f.validators ?? {}).reduce(
        (p, [g, v]) => ({
          ...p,
          ...Wr(g, v)
        }),
        {}
      );
      return {
        ...h,
        [f.name]: {
          ...i
        }
      };
    }, {}), l = It(u, s, { $autoDirty: false, $lazy: true }), o = ref(r.error);
    function c(h, f) {
      s[h] = f, m();
    }
    watchEffect(() => {
      r.error ? o.value = r.error : o.value && l.value.$errors.length === 0 ? o.value = null : !o.value && l.value.$errors.length > 0 && (o.value = "Please update this form to correct the errors");
    }), watchEffect(() => {
      console.debug(`PdapForm ${r.name}
`, {
        errorMessage: o.value,
        props: r,
        schema: r.schema,
        data: a,
        values: s,
        vuelidate: {
          rules: u,
          v$: l
        }
      });
    });
    function m() {
      n("change", { ...s });
    }
    async function $(h) {
      if (await l.value.$validate()) {
        n("submit", { ...s }), l.value.$reset(), h.target.reset(), s = Object.entries(s).reduce((p, [g, v]) => ({ ...p, [g]: ["true", "false"].includes(v) ? v : "" }), {});
        return;
      }
    }
    return (h, f) => (openBlock(), createElementBlock("form", {
      id: h.id,
      name: h.name,
      class: "pdap-form",
      onChange: m,
      onSubmit: f[0] || (f[0] = withModifiers((i) => $(i), ["prevent"]))
    }, [
      typeof o.value == "string" ? (openBlock(), createElementBlock("div", Xr, toDisplayString(o.value), 1)) : createCommentVNode("", true),
      (openBlock(true), createElementBlock(Fragment, null, renderList(a.value, (i) => {
        var p, g, v, A;
        return openBlock(), createBlock(Mt, mergeProps(i, {
          key: i.name,
          error: (p = unref(l)[i.name]) != null && p.$error ? (A = (v = (g = unref(l)[i.name]) == null ? void 0 : g.$errors) == null ? void 0 : v[0]) == null ? void 0 : A.$message : "",
          value: unref(s)[i.name],
          onChange: (F) => c(i.name, F),
          onInput: (F) => c(i.name, F)
        }), null, 16, ["error", "value", "onChange", "onInput"]);
      }), 128)),
      renderSlot(h.$slots, "default")
    ], 40, Ur));
  }
});
var Zr = defineComponent({
  __name: "GridContainer",
  props: {
    columns: { default: "auto" },
    component: { default: "div" },
    rows: { default: "auto" },
    templateColumns: {},
    templateRows: {}
  },
  setup(e) {
    const t = e, r = reactive({
      "pdap-grid-container": true,
      [`pdap-grid-container-column-${t.columns}`]: t.columns !== "auto"
    }), n = t.templateRows || typeof t.rows == "number", a = t.templateRows ?? `repeat(${t.rows}, minmax(0, 1fr))`, s = reactive({
      ...n && {
        gridTemplateRows: a
      },
      ...t.templateColumns && { gridTemplateColumns: t.templateColumns }
    });
    return (u, l) => (openBlock(), createBlock(resolveDynamicComponent(u.component), {
      class: normalizeClass(r),
      style: normalizeStyle(s)
    }, {
      default: withCtx(() => [
        renderSlot(u.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "style"]));
  }
});
var pn = defineComponent({
  __name: "GridItem",
  props: {
    component: { default: "div" },
    spanColumn: { default: 1 },
    spanRow: { default: 1 }
  },
  setup(e) {
    const t = e, r = reactive({
      "pdap-grid-item": true,
      [`pdap-grid-item-span-column-${t.spanColumn}`]: t.spanColumn > 1
    }), n = reactive({
      // Only add inline property if it is passed and exceeds the default
      ...t.spanRow > 1 && {
        gridRow: `span ${t.spanRow} / span ${t.spanRow}`
      }
    });
    return (a, s) => (openBlock(), createBlock(resolveDynamicComponent(a.component), {
      class: normalizeClass(r),
      style: normalizeStyle(n)
    }, {
      default: withCtx(() => [
        renderSlot(a.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "style"]));
  }
});
var Qr = createBaseVNode("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 448 512"
}, [
  createBaseVNode("path", { d: "M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z" })
], -1);
var Jr = [
  Qr
];
var Yr = ["aria-expanded"];
var en = ["href"];
var tn = defineComponent({
  __name: "PdapNav",
  props: {
    topPosition: {}
  },
  setup(e) {
    let t = inject("navLinks");
    typeof t > "u" && (t = [], console.error(
      `Hey, PDAP developer 
`,
      "Did you forget to inject some linkData for the Nav component?"
    ));
    const r = reactive({
      isExpanded: false,
      isMobile: true
    }), n = reactive({
      "pdap-nav": true
    });
    onBeforeMount(() => {
      a(), window.addEventListener("resize", a);
    }), onBeforeUnmount(() => {
      window.removeEventListener("resize", a);
    });
    async function a() {
      window.innerWidth <= 1024 ? r.isMobile = true : r.isMobile = false, await nextTick();
    }
    async function s() {
      var l, o;
      const u = document.querySelector("body");
      !r.isExpanded && r.isMobile ? (r.isExpanded = true, u != null && u.classList.contains("lock-scroll") || (l = document.querySelector("body")) == null || l.classList.add("lock-scroll")) : r.isExpanded && r.isMobile && (r.isExpanded = false, (o = document.querySelector("body")) == null || o.classList.remove("lock-scroll")), await nextTick();
    }
    return (u, l) => (openBlock(), createElementBlock(Fragment, null, [
      createBaseVNode("div", {
        "aria-controls": "nav",
        class: "pdap-nav-open-button",
        role: "button",
        onClick: s
      }, Jr),
      createBaseVNode("nav", {
        id: "nav",
        "aria-expanded": r.isMobile && r.isExpanded || !r.isMobile,
        class: normalizeClass(n),
        style: normalizeStyle(r.isMobile ? { top: `${u.topPosition}px` } : {})
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(t), (o) => (openBlock(), createElementBlock("li", {
          key: o.text,
          class: "pdap-nav-link-container"
        }, [
          o.href ? (openBlock(), createElementBlock("a", {
            key: 0,
            class: "pdap-nav-link",
            href: o.href,
            target: "_blank",
            referrerpolicy: "no-referrer",
            onClick: s
          }, toDisplayString(o.text), 9, en)) : createCommentVNode("", true),
          o.path ? (openBlock(), createBlock(unref(RouterLink), {
            key: 1,
            "active-class": "pdap-nav-link-current",
            "exact-active-class": "pdap-nav-link-current-exact",
            class: "pdap-nav-link",
            to: o.path,
            onClick: s
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(o.text), 1)
            ]),
            _: 2
          }, 1032, ["to"])) : createCommentVNode("", true)
        ]))), 128))
      ], 14, Yr)
    ], 64));
  }
});
var rn = ["href"];
var nn = ["src"];
var an = ["src"];
var mn = defineComponent({
  __name: "PdapHeader",
  props: {
    logoImageSrc: { default: "node_modules/pdap-design-system/dist/images/lockup.svg" },
    logoImageAnchorPath: { default: "/" }
  },
  setup(e) {
    const t = e, r = ref(), n = ref(null), a = t.logoImageAnchorPath.startsWith("/");
    onMounted(() => {
      s(), window.addEventListener("resize", s);
    }), onBeforeUnmount(() => {
      window.removeEventListener("resize", s);
    });
    function s() {
      n.value && (r.value = n.value.offsetHeight);
    }
    return (u, l) => (openBlock(), createElementBlock("header", {
      ref_key: "el",
      ref: n,
      class: "pdap-header"
    }, [
      unref(a) ? (openBlock(), createBlock(unref(RouterLink), {
        key: 1,
        to: u.logoImageAnchorPath,
        class: "logo"
      }, {
        default: withCtx(() => [
          createBaseVNode("img", {
            src: u.logoImageSrc,
            loading: "lazy",
            width: "250",
            alt: "Police Data Accessibility Project Logo"
          }, null, 8, an)
        ]),
        _: 1
      }, 8, ["to"])) : (openBlock(), createElementBlock("a", {
        key: 0,
        href: u.logoImageAnchorPath,
        class: "logo"
      }, [
        createBaseVNode("img", {
          src: u.logoImageSrc,
          loading: "lazy",
          width: "250",
          alt: "Police Data Accessibility Project Logo"
        }, null, 8, nn)
      ], 8, rn)),
      createVNode(tn, { "top-position": r.value }, null, 8, ["top-position"])
    ], 512));
  }
});
var sn = createBaseVNode("h2", { class: "mt-0" }, "Search our database", -1);
var on = createBaseVNode("p", { class: "pb-4 md:pb-8" }, [
  createTextVNode(" If you have a question to answer, we may already know about helpful data in your area. "),
  createBaseVNode("a", { href: "https://pdap.io/data" }, "Learn more about the data here.")
], -1);
var fn = defineComponent({
  __name: "QuickSearchForm",
  props: {
    baseUrlForRedirect: { default: "https://data-sources.pdap.io" }
  },
  setup(e) {
    const t = useRouter(), r = e, n = [
      {
        id: "search-term",
        name: "searchTerm",
        label: "What are you looking for?",
        type: S.TEXT,
        placeholder: "Enter a keyword, or 'all'",
        value: ""
      },
      {
        id: "location",
        name: "location",
        label: "From where?",
        type: S.TEXT,
        placeholder: "Enter a place, or 'all'",
        value: ""
      }
    ], a = ref(void 0);
    function s(l) {
      a.value && Object.values(l).some(Boolean) && (a.value = void 0);
    }
    function u(l) {
      if (Object.values(l).every((m) => !m)) {
        a.value = "Either a search term or a location is required.";
        return;
      }
      let { location: o, searchTerm: c } = l;
      o = o && o.length > 0 ? o : "all", c = c && c.length > 0 ? c : "all", t.getRoutes().some((m) => m.path.includes("/search/")) ? t.push(`/search/${c}/${o}`) : window.location.assign(
        `${r.baseUrlForRedirect}/search/${c}/${o}`
      );
    }
    return (l, o) => (openBlock(), createElementBlock(Fragment, null, [
      createVNode(me, { class: "p-0" }, {
        default: withCtx(() => [
          sn,
          on
        ]),
        _: 1
      }),
      createVNode(me, {
        alignment: "center",
        class: "pdap-quick-search-form h-full max-h-[75-vh] justify-start p-0"
      }, {
        default: withCtx(() => [
          createVNode(Kr, {
            id: "quick-search-form",
            class: "flex flex-wrap gap-x-4",
            error: a.value,
            schema: n,
            name: "quickSearchForm",
            onChange: s,
            onSubmit: u
          }, {
            default: withCtx(() => [
              createVNode(lt, {
                type: "submit",
                class: "flex-grow-0 flex-shrink-0 basis-full max-w-[unset] mt-4"
              }, {
                default: withCtx(() => [
                  createTextVNode("Search Data Sources")
                ]),
                _: 1
              })
            ]),
            _: 1
          }, 8, ["error"])
        ]),
        _: 1
      })
    ], 64));
  }
});
var ln = ["alt", "src"];
var gn = defineComponent({
  __name: "TileIcon",
  props: {
    imgAltText: {},
    imgSrc: {}
  },
  setup(e) {
    return (t, r) => (openBlock(), createElementBlock("img", {
      class: "pdap-tile-icon",
      alt: t.imgAltText,
      src: t.imgSrc
    }, null, 8, ln));
  }
});
var hn = {
  content: ["./src/**/*.vue", "./src/**/*.css"],
  theme: {
    // Nested within "extend" - extends tailwind theme defaults, only overrides properties named here
    extend: {
      colors: {
        brand: {
          blue: {
            light: "rgba(var(--color-brand-blue-light)/<alpha-value>)",
            medium: "rgba(var(--color-brand-blue-medium)/<alpha-value>)"
          },
          gold: "rgba(var(--color-brand-gold)/<alpha-value>)",
          wine: "rgba(var(--color-brand-wine)/<alpha-value>)"
        },
        neutral: {
          50: "rgba(var(--color-neutral-50)/<alpha-value>)",
          100: "rgba(var(--color-neutral-100)/<alpha-value>)",
          200: "rgba(var(--color-neutral-200)/<alpha-value>)",
          300: "rgba(var(--color-neutral-300)/<alpha-value>)",
          400: "rgba(var(--color-neutral-400)/<alpha-value>)",
          500: "rgba(var(--color-neutral-500)/<alpha-value>)",
          600: "rgba(var(--color-neutral-600)/<alpha-value>)",
          700: "rgba(var(--color-neutral-700)/<alpha-value>)",
          800: "rgba(var(--color-neutral-800)/<alpha-value>)",
          900: "rgba(var(--color-neutral-900)/<alpha-value>)",
          950: "rgba(var(--color-neutral-950)/<alpha-value>)"
        }
      },
      brightness: {
        85: ".85"
      },
      maxWidth: {
        "4xl": "59rem"
      },
      screens: {
        xs: "500px"
      }
    },
    // Using properties directly - overrides tailwind theme defaults for entire section
    fontFamily: {
      sans: [
        '"Libre Franklin"',
        "ui-sans-serif",
        "system-ui",
        "-apple-system",
        "BlinkMacSystemFont",
        '"Segoe UI"',
        "Roboto",
        "Oxygen",
        "Ubuntu",
        "Cantarell",
        '"Fira Sans"',
        '"Droid Sans"',
        '"Helvetica Neue"',
        "sans-serif"
      ],
      serif: ["ui-serif", "Georgia"],
      mono: [
        '"Source Code Pro"',
        "monospace",
        "ui-monospace",
        "SFMono-Regular"
      ]
    },
    fontSize: {
      xs: "0.75rem",
      sm: "0.875rem",
      med: "1rem",
      lg: "1.125rem",
      xl: "1.25rem",
      "2xl": "1.5rem",
      "3xl": "1.75rem",
      "4xl": "2rem",
      "5xl": "2.625rem",
      "6xl": "3rem"
    }
  }
};
export {
  lt as Button,
  me as FlexContainer,
  dn as Footer,
  Kr as Form,
  Zr as GridContainer,
  pn as GridItem,
  mn as Header,
  Mt as Input,
  tn as Nav,
  S as PdapInputTypes,
  fn as QuickSearchForm,
  gn as TileIcon,
  hn as tailwindConfig
};
//# sourceMappingURL=pdap-design-system.js.map
